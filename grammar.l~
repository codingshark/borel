%{
#include <string>
#include <iostream>
#include "grammar.tab.h"

using std::string;
using std::cout;
using std::endl;

extern "C" int yywrap();

string lex_str;

%}

%x CPP_COMMENT
%x C_COMMENT
%s PROLOGUE
%s DECLARATIONS
%x RULE

%%

<<EOF>>    {return 0;}

"%{"			{BEGIN PROLOGUE;}
<PROLOGUE>"%}"		{BEGIN INITIAL;}
<PROLOGUE>.*|\n		{lex_str = string(yytext); return PROLOGUE_STMT;}


"%%"			{BEGIN DECLARATIONS;}
<DECLARATIONS>"%%"	{BEGIN INITIAL;}
<DECLARATIONS>"|"	|
		";"	|	{cout<<"SYM\t:"<<yytext[0]<<endl; return yytext[0];}

<DECLARATIONS>"//"	{BEGIN CPP_COMMENT;}
<CPP_COMMENT>\n		{BEGIN INITIAL;}
<CPP_COMMENT>.*		/*keep silent*/

<DECLARATIONS>"/*"	{BEGIN C_COMMENT;}
<C_COMMENT>"*/"		{BEGIN INITIAL;}
<C_COMMENT>.*		/*keep silent*/

<DECLARATIONS>"{"	{}
<DECLARATIONS>"}"	{BEGIN INITIAL;}


<DECLARATIONS>[A-Za-z0-9_]*    {lex_str = string(yytext); cout<<"ID:\t"<<lex_str<<endl; /*return IDENTIFIER;*/}

.|\n    {lex_str = string(yytext); return EPILOGUE_STMT;}

%%

int yywrap()
{
    return 1;
}
