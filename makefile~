EXE_NAME = borel

LEX = flex
YACC = bison
CC = g++

CPPFLAGS = -g #-DDEBUG

H_FILES	= -I./ -I./printer/ -I./generator/ 

CPP_LOCATIONS	= ./*.cpp ./printer/*.cpp ./generator/*.cpp
C_LOCATIONS	= ./*.c

vpath	= ./printer/ ./generator/

CPP_SRC	= $(wildcard $(CPP_LOCATIONS))
C_SRC	= $(wildcard $(C_LOCATIONS))
CPP_OBJS	= $(CPP_SRC:.cpp=.o)
C_OBJS		= $(C_SRC:.c=.o)
CPP_DEPENDS	= $(CPP_SRC:.cpp=.d)
C_DEPENDS	= $(C_SRC:.c=.d)

$(EXE_NAME): $(CPP_OBJS) $(C_OBJS) 
	$(CC) $(CPPFLAGS) -o $@ $(CPP_OBJS) $(C_OBJS) $(H_FILES)

lex: $(EXE_NAME).l
	$(LEX) $(EXE_NAME).l

bison: $(EXE_NAME).y
	$(YACC) --defines=$(EXE_NAME).tab.h $(EXE_NAME).y

syntax:	lex bison

.cpp.o: 
	$(CC) $(CPPFLAGS) -c $< -o $@ $(INCLUDES) $(H_FILES)

.c.o:
	$(CC) $(CPPFLAGS) -c $< -o $@ $(INCLUDES)


get_dependency: rm_old_dependency gen_new_dependency

rm_old_dependency:
	rm -f dependencies.d

gen_new_dependency: $(CPP_DEPENDS)  $(C_DEPENDS)

include dependencies.d

%.d: %.cpp
	$(CC) -MM $< $(INCLUDES) >> dependencies.d $(H_FILES)

%.d: %.c
	$(CC) -MM $< $(INCLUDES) >> dependencies.d

.PHONY : clean get_dependency
clean :
	-rm $(CPP_OBJS) $(C_OBJS) $(EXE_NAME)  $(EXE_NAME) lex.yy.c lex.yy.o $(EXE_NAME).tab.c $(EXE_NAME).tab.h  $(EXE_NAME) lex.yy.o

include testcases.mk


